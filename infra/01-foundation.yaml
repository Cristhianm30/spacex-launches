AWSTemplateFormatVersion: '2010-09-09'
Description: Foundation infrastructure for SpaceX Launches - IAM, ECR, Security Groups

Parameters:
  VpcId:
    Type: String
    Description: VPC ID where resources will be created
  ProjectName:
    Type: String
    Default: spacex-launches
    Description: Project name for resource naming and tagging

Resources:
  # --- IAM Roles ---
  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-ecsTaskRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProjectName}"
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  # --- ECR Repositories ---
  BackendEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ProjectName}-back"
      ImageScanningConfiguration: 
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  FrontendEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ProjectName}-front"
      ImageScanningConfiguration: 
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  # --- Security Groups ---
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ProjectName}-alb-sg"
      GroupDescription: Security Group for Application Load Balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access from internet
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access from internet
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 172.31.0.0/16
          Description: HTTP access from VPC Link (API Gateway)
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-alb-sg"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ProjectName}-ecs-sg"
      GroupDescription: Security Group for ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          Description: Backend access from ALB
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          Description: Frontend access from ALB
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-ecs-sg"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

Outputs:
  EcsTaskRoleArn:
    Description: ARN of the ECS Task Role
    Value: !GetAtt EcsTaskRole.Arn
    Export:
      Name: !Sub "${ProjectName}-EcsTaskRoleArn"

  EcsTaskExecutionRoleArn:
    Description: ARN of the ECS Task Execution Role
    Value: !GetAtt EcsTaskExecutionRole.Arn
    Export:
      Name: !Sub "${ProjectName}-EcsTaskExecutionRoleArn"

  BackendEcrRepoUri:
    Description: URI of the Backend ECR Repository
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${BackendEcrRepository}"
    Export:
      Name: !Sub "${ProjectName}-BackendEcrRepoUri"

  FrontendEcrRepoUri:
    Description: URI of the Frontend ECR Repository
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FrontendEcrRepository}"
    Export:
      Name: !Sub "${ProjectName}-FrontendEcrRepoUri"

  ALBSecurityGroupId:
    Description: ID of the ALB Security Group
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub "${ProjectName}-ALBSecurityGroupId"

  ECSSecurityGroupId:
    Description: ID of the ECS Security Group
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub "${ProjectName}-ECSSecurityGroupId"
