AWSTemplateFormatVersion: '2010-09-09'
Description: Compute infrastructure for SpaceX Launches - ECS Cluster, Task Definitions, Services

Parameters:
  VpcId:
    Type: String
    Description: VPC ID where resources will be created
  Subnets:
    Type: List<String>
    Description: List of subnet IDs for ECS services
  ProjectName:
    Type: String
    Default: spacex-launches
    Description: Project name for resource naming and tagging
  BackendImageTag:
    Type: String
    Default: latest
    Description: Docker image tag for backend service
  FrontendImageTag:
    Type: String
    Default: latest
    Description: Docker image tag for frontend service

Resources:
  # --- ECS Cluster ---
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${ProjectName}-cluster"
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 4
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  # --- CloudWatch Log Groups ---
  BackendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ProjectName}-backend"
      RetentionInDays: 14
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  FrontendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ProjectName}-frontend"
      RetentionInDays: 14
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  # --- Task Definitions ---
  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${ProjectName}-backend-task"
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: 
        Fn::ImportValue: !Sub "${ProjectName}-EcsTaskExecutionRoleArn"
      TaskRoleArn: 
        Fn::ImportValue: !Sub "${ProjectName}-EcsTaskRoleArn"
      ContainerDefinitions:
        - Name: !Sub "${ProjectName}-backend"
          Image: !Sub 
            - "${RepoUri}:${ImageTag}"
            - RepoUri: 
                Fn::ImportValue: !Sub "${ProjectName}-BackendEcrRepoUri"
              ImageTag: !Ref BackendImageTag
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref BackendLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: SPRING_PROFILES_ACTIVE
              Value: prod
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
          HealthCheck:
            Command:
              - CMD-SHELL
              - "curl -f http://localhost:8080/api/actuator/health || exit 1"
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${ProjectName}-frontend-task"
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: 
        Fn::ImportValue: !Sub "${ProjectName}-EcsTaskExecutionRoleArn"
      TaskRoleArn: 
        Fn::ImportValue: !Sub "${ProjectName}-EcsTaskRoleArn"
      ContainerDefinitions:
        - Name: !Sub "${ProjectName}-frontend"
          Image: !Sub 
            - "${RepoUri}:${ImageTag}"
            - RepoUri: 
                Fn::ImportValue: !Sub "${ProjectName}-FrontendEcrRepoUri"
              ImageTag: !Ref FrontendImageTag
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref FrontendLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command:
              - CMD-SHELL
              - "curl -f http://localhost/health || exit 1"
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 30
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  # --- ECS Services ---
  BackendService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${ProjectName}-backend-service"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: LATEST
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups: 
            - Fn::ImportValue: !Sub "${ProjectName}-ECSSecurityGroupId"
      TaskDefinition: !Ref BackendTaskDefinition
      LoadBalancers:
        - ContainerName: !Sub "${ProjectName}-backend"
          ContainerPort: 8080
          TargetGroupArn: 
            Fn::ImportValue: !Sub "${ProjectName}-BackendTargetGroupArn"
      HealthCheckGracePeriodSeconds: 120
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      EnableExecuteCommand: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

  FrontendService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${ProjectName}-frontend-service"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: LATEST
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups: 
            - Fn::ImportValue: !Sub "${ProjectName}-ECSSecurityGroupId"
      TaskDefinition: !Ref FrontendTaskDefinition
      LoadBalancers:
        - ContainerName: !Sub "${ProjectName}-frontend"
          ContainerPort: 80
          TargetGroupArn: 
            Fn::ImportValue: !Sub "${ProjectName}-FrontendTargetGroupArn"
      HealthCheckGracePeriodSeconds: 60
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      EnableExecuteCommand: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Owner
          Value: Cristhian Moreno
        - Key: Environment
          Value: prod

Outputs:
  ECSClusterName:
    Description: Name of the ECS Cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub "${ProjectName}-ECSClusterName"

  BackendServiceName:
    Description: Name of the Backend ECS Service
    Value: !Ref BackendService
    Export:
      Name: !Sub "${ProjectName}-BackendServiceName"

  FrontendServiceName:
    Description: Name of the Frontend ECS Service
    Value: !Ref FrontendService
    Export:
      Name: !Sub "${ProjectName}-FrontendServiceName"

  BackendTaskDefinitionArn:
    Description: ARN of the Backend Task Definition
    Value: !Ref BackendTaskDefinition
    Export:
      Name: !Sub "${ProjectName}-BackendTaskDefinitionArn"

  FrontendTaskDefinitionArn:
    Description: ARN of the Frontend Task Definition
    Value: !Ref FrontendTaskDefinition
    Export:
      Name: !Sub "${ProjectName}-FrontendTaskDefinitionArn"
